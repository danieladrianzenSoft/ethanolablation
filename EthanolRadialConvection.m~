function EthanolRadialConvection

clear
clc

[D_S,Rinit,Rtot,phi,C_0,Vol,Q0,t2] = initializeParameters();
tspan = [min(t2),max(t2)];

numr = 1000;
ns = numr;

r = linspace(0,Rtot,numr);
%Rinit = r(2);
nRinit = find(r>=Rinit,1);
bound = find(r>=0.5,1); %Tumor boundary at 0.5cm radius (1cm diameter)

%Q = zeros(1,length(t));
%Q0 = 1/(3600); %1ml/hr converted to ml/s
tin_stop = find(t2>=Vol/Q0,1);
tpre = t2(1:tin_stop);
C = zeros(length(t2),length(r));

%Q(1:tin_stop) = Q0;
%Vr = [0,Q0./(4*pi*r(2:end).^2)]';
%dVdr = [0,-Q0./(2*pi*r(2:end).^3)]';

%size(Vr)
%size(Vr)

IC = zeros(1,numr);
IC(1:nRinit) = C_0;

S = calcsparsity(r,numr);
S = sparse(S);


opts1 = odeset('Stats','on','JPattern',S);

v = [0,Q0./(4*pi*r(2:end).^2)];
dvdr = [0,-Q0./(2*pi*r(2:end).^3)];
%v = zeros(1,length(r));
%dvdr = zeros(1,length(r));
[ttemp,Cpre] = ode15s(@(ttemp,Cpre) dcdt(tpre,Cpre,r,Rinit,Rtot,D_S,phi,ns,v,dvdr,C_0), tpre, IC,opts1);

C(1:tin_stop,:) = Cpre;

IC2 = C(tin_stop,:);
remaintime = t2(tin_stop+1:end);
v = zeros(1,length(r));
dvdr = zeros(1,length(r));
[ttemp2,Cpost] = ode15s(@(ttemp2,Cpost) dcdt(remaintime,Cpost,r,Rinit,Rtot,D_S,phi,ns,v,dvdr,C_0), remaintime, IC2,opts1);
C(tin_stop+1:end,:) = Cpost;

C = C';

figure()
cm = colormap('copper');

tvec1=[find(t2>=0*60,1)  find(t2>=2*60,1) find(t2>=4*60,1) find(t2>=6*60,1) find(t2>=10*60,1) find(t2>=15*60,1) find(t2>=30*60,1) find(t2>=60*60,1) find(t2>=2*60*60,1)];

%plot(r,C(:,tvec1(i)),'color',cm(i*6,:),'LineWidth',2)
%hold all
for i=1:length(tvec1)
plot(r,C(:,tvec1(i)),'color',cm(i*6,:),'LineWidth',2)
hold all
end

%  ylimmin = 0;
%  ylimmax = 1;
%  axis([0 x(end) ylimmin ylimmax])
%  ylims = linspace(ylimmin, ylimmax, 500);
%  x1lim = h_S*(ylims./ylims);
%  hold on
%  plot(x1lim,ylims,'k--')
 ylabel('Ethanol Concentration (normalized)','FontSize',18,'FontWeight','Bold')
 xlabel('Radius (cm)','FontSize',18,'FontWeight','Bold')
 title('Normalized ethanol concentration vs. radius at different times','FontSize',18,'FontWeight','Bold')
 legend('0mins','2mins','4mins','6mins','10mins','15mins','30mins','60mins','120mins')
 XT = get(gca,'XTick');
 set(gca,'FontSize',16)
 YT = get(gca,'YTick');
 set(gca,'FontSize',16)
 xlim([0,0.8])
 %ylim([0,1])
 
MassInside = trapz(r(1:bound),C(1:bound,:),1);
MassOutside = trapz(r(bound+1:numr),C(bound+1:numr,:),1);
%MassInside = trapz(C(1:bound,:),1);
%MassOutside = trapz(C(bound+1:end,:),1);
TotMass = MassInside+MassOutside;
TotMassPredic = trapz(r,C,1);

figure()
plot(t2/60,MassInside,'b','LineWidth',2)
hold on
plot(t2/60,MassOutside,'r','LineWidth',2)
plot(t2/60,TotMass,'k','LineWidth',2)
plot(t2/60,TotMassPredic,'g--','LineWidth',2)

%legend('Inside Tumor','Outside Tumor','Total Drug Mass','Total Predicted')
 
% figure()
% plot(r,(Vr.*r)/D_S,'LineWidth',2)
%  xlabel('Radius (cm)','FontSize',18,'FontWeight','Bold')
%  ylabel('Peclet Number','FontSize',18,'FontWeight','Bold')
%  title('Peclet number vs radius','FontSize',18,'FontWeight','Bold')

 figure()
 plot(t2/60,C(bound,:),'LineWidth',2)
 xlabel('Time (mins)','FontSize',18,'FontWeight','Bold')
 ylabel('Ethanol concentration (normalized)','FontSize',18,'FontWeight','Bold')
 title('Ethanol concentration at tumor boundary r = 0.5cm vs. time','FontSize',18,'FontWeight','Bold')
 XT = get(gca,'XTick');
 set(gca,'FontSize',16)
 YT = get(gca,'YTick');
 set(gca,'FontSize',16)

%  CTumor_avg = trapz(C(1:bound,:))/(ns-1);
%  figure()
%  plot(t2/60,CTumor_avg,'LineWidth',2)
%  xlabel('Time (mins)','FontSize',18,'FontWeight','Bold')
%  ylabel('Avg. Ethanol concentration (normalized)','FontSize',18,'FontWeight','Bold')
%  title('Average Ethanol concentration in tumor vs. time','FontSize',18,'FontWeight','Bold')
%  XT = get(gca,'XTick');
%  set(gca,'FontSize',16)
%  YT = get(gca,'YTick');
%  set(gca,'FontSize',16)
%  xlim([0,5])
 
 %CONVERTING TO CARTESIAN FOR PLOTTING
 
 theta = linspace(0,2*pi,200);
 x = zeros(1+(length(r)-1)*length(theta),1);
 y = zeros(1+(length(r)-1)*length(theta),1);
 z = zeros(1+(length(r)-1)*length(theta),1);
 
 tumorX = r(bound)*cos(theta);
 tumorY = r(bound)*sin(theta);
 
 for j = 1:length(tvec1)
     
     for i = 1:length(theta)
         x((length(r)-1)*(i-1)+2:(length(r)-1)*i+1) = r(2:end)*cos(theta(i));
         y((length(r)-1)*(i-1)+2:(length(r)-1)*i+1) = r(2:end)*sin(theta(i));
         z((length(r)-1)*(i-1)+2:(length(r)-1)*i+1) = C(2:end,tvec1(j));
     end

     z(1) = C(1,tvec1(j));

     data = [x,y,z];

     X = linspace(min(data(:,1)),max(data(:,1)),150);
     Y = linspace(min(data(:,2)),max(data(:,2)),150);

     [XX,YY]=meshgrid(X,Y);
     
     figure()

     F=scatteredInterpolant(data(:,1),data(:,2),data(:,3));
     contourf(XX,YY,F(XX,YY),100,'LineColor','none')
     xlim([-1.2,1.2])
     ylim([-1.2,1.2])
     hold on
     colormap parula
     colorbar
     plot(tumorX,tumorY,'w--','LineWidth',2)
     xlabel('X (cm)','FontSize',18,'FontWeight','Bold')
     ylabel('Y (cm)','FontSize',18,'FontWeight','Bold')
     title(sprintf('t = %.0f mins',floor(t2(tvec1(j))/60)),'FontSize',18,'FontWeight','Bold')
     XT = get(gca,'XTick');
     set(gca,'FontSize',16)
     YT = get(gca,'YTick');
     set(gca,'FontSize',16)

     
 end

% figure()
% plot(t2/60,PsurfaceC,'LineWidth',2)
% hold on
% plot(measurements(:,1),MsurfaceC,'x')
% %plot(TTemp,ConcTemp,'ro')
% legend('Model Predictions','Raman Measurements')
% xlabel('Time (mins)','FontSize',18,'FontWeight','Bold')
% ylabel('Ethanol concentration (normalized)','FontSize',18,'FontWeight','Bold')
% title('Ethanol concentration vs time on stromal surface','FontSize',18,'FontWeight','Bold')
% XT = get(gca,'XTick');
% set(gca,'FontSize',16)
% YT = get(gca,'YTick');
% set(gca,'FontSize',16)

end

function [D_S,Rinit,Rtot,phi,C_0,Vol,Q0,t2] = initializeParameters()

%%%%%% PARAMETERS %%%%%%

% D_OH = 1*10^(-5); %cm^2/s, from "Molecular Dynamics simulation of ethanol/water
% %mixtures for structure and diffusion properties, 2005.
D_S = 7.5*10^(-6); %(cm^2/s)
C_0 = 1;
phi = 1;
Vol = 0.1; %ml
Q0 = 1/3600; %1ml/hr to ml/s.

%%%GEOMETRY:

Rtot = 2; %cm - Limit of our analysis
%Rinit = 0.25/2; %cm - Initial ethanol distribution
Rinit = 0.03;
t2 = linspace(0,2*60*60,1200);

end

function DCDT = dcdt(t,C,r,Rinit,Rtot,D_S,phi,ns,v,dvdr,C_0)

%NOTE: TO UNDERSTAND THESE EQUATIONS, LOOK UP FOR DIFFERENCE EQUATIONS: CENTRAL, BACKWARD
%AND FORWARD.
dr = r(2)-r(1);
dCdt = zeros(1,length(r));
dCdr = zeros(1,length(r));
d2Cdr2 = zeros(1,length(r));

for i = 1 %y direction BC zero flux (dcdx=0, dvdr = 0)
    dCdt(i) = 6*D_S.*(C(i+1)-C(i))./(dr.^2);
    %dCdt(i) = 6*D_S.*(C(i+1)-C(i))./(dr.^2);
end
for i = 2:(ns-1) %in tissue
    dCdr(i) = (C(i)-C(i-1))./dr;
    %dCdr(i) = (C(i+1)-C(i-1))./(2*dr);
    d2Cdr2(i) = (C(i+1)-2.*C(i)+C(i-1))./(dr.^2);
    dCdt(i) = ((2*D_S/r(i)).*dCdr(i))+(D_S*d2Cdr2(i))-((2/r(i)).*(v(i).*C(i)))-(C(i).*dvdr(i))-(v(i).*dCdr(i));
end
for i = ns %right before interface - stroma
    %dCdt(i) = 6*D_S*(C(i-1)-C(i))./(dr.^2)-4*(v(i)*dCdr(i)+C(i)*dvdr(i));
    dCdt(i) = 6*D_S*(C(i-1)-C(i))./(dr.^2);
    %dCdt(i) = 0;
end

DCDT = dCdt';

end

function S = calcsparsity(r,numr)
    totalSize = numr;
    S = ones(totalSize,totalSize);
end
 



% function v = EthanolRadialConvection
% 
% clear
% clc
% 
% Rfin = 1.5;
% r = linspace(0,1.5,1000);
% %delP = 50*760; %50 mmHg, converstion to dyn/cm2 (*760), Fan's paper.
% mu = 0.809; %viscosity ethanol at 37oC. 
% k = 0.75*10^(-5); %hydraulic conductivity, cm2/cmh2O/sec at 50mmHg infusion pressure. 
% dPdr = -Q/(4*pi*k*(r.^2));
% IC = [0 0];
% 
% 
% [r,v] = ode45(@(r,v) injection(r,v,dPdr,Rfin,mu,k), r, IC);
% 
% figure()
% plot(r,v(1),'LineWidth',2)
% title('V','FontSize',18,'FontWeight','Bold')
% xlabel('r (cm)','FontSize',18,'FontWeight','Bold')
% ylabel('V(cm/s)','FontSize',18,'FontWeight','Bold')
% figure()
% plot(r,v(2),'lineWidth',2)
% title('dVdt','FontSize',16,'FontWeight','Bold')
% xlabel('r (cm)','FontSize',18,'FontWeight','Bold')
% 
% 
% function dVdr = injection(r,v,dPdr,Rfin,mu,k)
% 
%     %dvdt = [v(2);(-2/r)*v(2)+(1/(k*mu))*v(1)+(1/mu)*dPdr];
% 
%     %NOTE: TO UNDERSTAND THESE EQUATIONS, LOOK UP FOR DIFFERENCE EQUATIONS: CENTRAL, BACKWARD
% %AND FORWARD.
% dr = r(2)-r(1);
% %dCdt = zeros(1,length(r));
% dVdr = zeros(1,length(r));
% d2Vdr2 = zeros(1,length(r));
% 
% for i = 1 %y direction BC zero flux (dcdx=0)
%     dVdr(i) = 6*D_S.*(C(i+1)-C(i))./(dr.^2);
% end
% for i = 2:(ns-1) %in stroma
%     dCdr(i) = (C(i+1)-C(i))./dr;
%     d2Cdr2(i) = (C(i+1)-2.*C(i)+C(i-1))./(dr.^2);
%     dCdt(i) = ((2*D_S/r(i)).*dCdr(i))+(D_S*d2Cdr2(i));
% end
% for i = ns %right before interface - stroma
%     dCdt(i) = 6*D_S*(C(i-1)-C(i))./(dr.^2);
%     %dCdt(i) = 0;
% end
% 
% DCDT = dCdt';
%     
%     
% end
% 
% end
